name: Full Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-cache-${{ runner.os }}-

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Cypress binary
        run: npx cypress install

      - name: Install global CLI tools
        run: npm install -g serve wait-on newman

      - name: Start frontend server
        run: |
          npx serve demo-testing-framework/app -l 5500 &
          npx wait-on http://localhost:5500

      - name: Run Cypress tests
        run: npx cypress run

      - name: Set up and start Flask API (background)
        run: |
          pip install -r requirements.txt
          nohup python app/api.py &

      - name: Wait for Flask API
        run: |
          sudo apt-get update && sudo apt-get install -y curl
          until curl --output /dev/null --silent --head --fail http://127.0.0.1:5000/api/health; do
            echo "‚è≥ Waiting for Flask API to be ready..."
            sleep 3
          done

      - name: Run Postman API tests with Newman
        run: newman run api-tests.postman_collection.json

      - name: Run Pact contract tests (consumer)
        run: npm run test:contract

      - name: Run Pact contract verification (provider)
        run: npm run test:verify

      - name: Run Python unit tests
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pytest demo-testing-framework/tests/test_calculator.py
